{"version":3,"sources":["assets\\script\\enemy\\giantRock.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\nimport enemy from \"../enemy\"\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class NewClass extends enemy {\n    \n    @property(cc.Node)\n    skill2Node: cc.Node = null;\n    @property(cc.Prefab)\n    skill1Node: cc.Prefab = null;\n    @property(cc.Prefab)\n    preBullet: cc.Prefab = null;\n    countAtk = 0;\n    @property(cc.AudioClip)\n    atkSOund: cc.AudioClip = null;\n    isCountDowskill = false\n    isAtk=false\n    attack(target) {\n        if (this.isAtk) return;\n        this.isAtk = true\n        this.isMeet = true;\n        let targetComp = target.getComponent('hero');\n        this.anim.scheduleOnce(() => {\n            targetComp.attacked(this.damage);\n\n        }, 0.3)\n      \n        this.atkList()\n    }\n    atkList() {\n        this.anim.play(\"atk\")\n        if (!this.isCountDowskill) {\n            this.isCountDowskill = true;\n            // cc.audioEngine.play(this.atkSOund, false, 0.8)\n            this.scheduleOnce(() => {\n                this.isCountDowskill = false;\n\n            }, 0.2)\n\n        }\n        switch (this.countAtk) {\n            case 2:\n                this.countAtk = 0;\n                this.skill1()\n\n                break;\n            case 1:\n                this.countAtk++\n                this.skill2()\n                break;\n            default:\n                this.countAtk++;\n                this.skill1()\n                break;\n        }\n    }\n    skill1() {\n        if (this.isSkill) return;\n        this.anim.play(\"skill1\")\n\n        this.isSkill = true;\n\n        // this.scheduleOnce(() => {\n        //     this.isSkill = false;\n        //     this.skill2()\n        // }, 0.5)\n  \n    }\n    skill2() {\n        if (this.isSkill) return;\n        this.isSkill = true;\n        this.anim.play(\"skill2\");\n\n    }\n    completeEvent(type) {\n        this.isSkill = false;\n\n        switch (type) {\n            case \"skill2\":\n                // this.atkList();\n                this.skill1()\n                break;\n            case \"skill1\":\n                // this.atkList()\n                this.skill2()\n                break\n        }\n    }\n    addEvent(type) {\n        switch (type) {\n            case \"skill2\":\n                // this.skill2();\n                this.skill2Node.getComponent(cc.Animation).play()\n                break;\n            case \"skill1\":\n                this.skill1()\n                break\n        }\n    }\n    // doubleAtk(target) {\n    //     for (let i = 0; i < 2; i++) {\n    //         let atk = cc.instantiate(this.atk_down)\n    //         atk.parent = this.node.parent;\n    //         let pos = target.parent.convertToWorldSpaceAR(target.position);\n    //         pos = this.node.parent.convertToNodeSpaceAR(pos)\n    //         atk.position = pos\n    //         atk.scaleX = ((i == 0) ? -1 : 1) * atk.scaleX\n    //         atk.zIndex = 2\n\n    //     }\n    // }\n\n    // createAtkDown(target) {\n    //     let atk = cc.instantiate(this.atk_down)\n    //     atk.parent = this.node.parent;\n    //     let pos = target.parent.convertToWorldSpaceAR(target.position);\n    //     pos = this.node.parent.convertToNodeSpaceAR(pos)\n    //     atk.scaleX = ((pos.x > this.node.x) ? -1 : 1) * atk.scaleX\n    //     atk.position = pos\n    //     atk.zIndex = 2\n\n\n    // }\n    // createAtkAround(target) {\n    //     let atk = cc.instantiate(this.atk_around)\n    //     atk.parent = this.node.parent;\n    //     let pos = target.parent.convertToWorldSpaceAR(target.position);\n    //     pos = this.node.parent.convertToNodeSpaceAR(pos)\n    //     atk.position = pos\n    //     atk.zIndex = 2\n    // }\n    exitTarget() {\n        if(this.arrHero.length<=0){\n            this.isAtk = false;\n\n            this.isSkill = false\n            this.isMeet = false;\n            this.anim.play(\"idle\")\n            // this.bodySkeleton.unscheduleAllCallbacks();\n            this.anim.unscheduleAllCallbacks();\n        }\n\n    }\n    update(dt: any): void {\n\n    }\n    // btn_skillCircle() {\n    //     // for (let i = 0; i < 12; i++) {\n    //     //     let rd = Math.floor(Math.random() * 2)\n\n    //     //     let bullet = cc.instantiate(this.preBullet);\n    //     //     let angle = (-Math.PI) + (Math.PI * i / 6);\n    //     //     let pos = cc.v3(0, 0);\n    //     //     this.node.addChild(bullet);\n    //     //     bullet.zIndex=cc.macro.MIN_ZINDEX\n    //     //     bullet.setPosition(pos.add(cc.v3(0, -50)));\n    //     //     // bullet.getChildByName(\"circle\").children[0].color = new cc.Color().fromHEX(\"#4ED3EC\");\n    //     //     bullet.scale = 0.4\n    //     //     let param = (this.node.scaleX < 0) ? (-400 - 50 * rd) : (400 + 50 * rd)\n    //     //     cc.tween(bullet).to(1, { position: cc.v3(param * Math.cos(angle), param * Math.sin(angle)).add(cc.v3(0, -50)) }).call(() => {\n    //     //         // bullet.getComponent(cc.Animation).play()\n    //     //    bullet.destroy()\n    //     //     }).start();\n    //     // }\n\n    // }\n}\n"]}