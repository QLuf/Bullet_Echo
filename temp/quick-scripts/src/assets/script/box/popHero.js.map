{"version":3,"sources":["assets\\script\\box\\popHero.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEM,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAsC,4BAAY;IAAlD;QAAA,qEA+CC;QA7CG,UAAI,GAAY,IAAI,CAAC;QAErB,YAAM,GAAY,IAAI,CAAC;QAEvB,YAAM,GAAY,IAAI,CAAC;;IAyC3B,CAAC;IAxCG,wBAAK,GAAL;IAEA,CAAC;IACD,6BAAU,GAAV;QACI,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;YACrB,4BAA4B;YAC5B,yFAAyF;YACzF,+DAA+D;YAC/D,+CAA+C;YAC/C,2FAA2F;YAC3F,aAAa;YACb,wFAAwF;YACxF,kDAAkD;YAClD,qDAAqD;YACrD,mBAAmB;YACnB,0DAA0D;YAC1D,gBAAgB;YAEhB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YACzB,IAAI,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;YACvF,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;YACjD,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;YACnD,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAA;YAC5B,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YAC/E,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/C,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC;YAChD,gBAAgB;YAChB,uDAAuD;YACvD,OAAO,KAAK,CAAC;SAKhB;IACL,CAAC;IACD,yBAAM,GAAN,UAAO,EAAE;QACL,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QACpC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;IAEvC,CAAC;IA5CD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;0CACG;IAErB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;4CACK;IAEvB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;4CACK;IANN,QAAQ;QAD5B,OAAO;OACa,QAAQ,CA+C5B;IAAD,eAAC;CA/CD,AA+CC,CA/CqC,EAAE,CAAC,SAAS,GA+CjD;kBA/CoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class NewClass extends cc.Component {\n    @property(cc.Node)\n    icon: cc.Node = null;\n    @property(cc.Node)\n    target: cc.Node = null;\n    @property(cc.Node)\n    camera: cc.Node = null;\n    start() {\n\n    }\n    checkAngle() {\n        if (this.target != null) {\n            // let target = this.target;\n            // let pos2 = target.position.add(cc.v3(this.camera.position.x, -this.camera.position.y))\n            // pos2 = target.parent.convertToWorldSpaceAR(target.position);\n            // pos2 = this.node.convertToNodeSpaceAR(pos2);\n            // let pos = this.node.position.add(cc.v3(this.camera.position.x, -this.camera.position.y))\n            // pos = pos2\n            // let tan = (target.x - pos.x !== 0) ? (target.y - pos.y - 30) / (target.x - pos.x) : 0\n            // let angle = Math.atan(tan) * (180 / (Math.PI));\n            // angle = (pos.x <= target.x) ? angle : angle + 180;\n            // // console.log()\n            // // this.node.scaleX = (pos.x <= target.x) ? 0.5 : -0.5;\n            // return angle;\n            \n            let target = this.target;\n            let pos2 = target.position.add(cc.v3(-this.camera.position.x,- this.camera.position.y))\n            pos2 = target.parent.convertToWorldSpaceAR(pos2);\n            pos2 = this.node.parent.convertToNodeSpaceAR(pos2);\n            let pos = this.node.position\n            let tan = (pos2.x - pos.x !== 0) ? (pos2.y - pos.y - 30) / (pos2.x - pos.x) : 0\n            let angle = Math.atan(tan) * (180 / (Math.PI));\n            angle = (pos.x <= pos2.x) ? angle : angle + 180;\n            // console.log()\n            // this.node.scaleX = (pos.x <= target.x) ? 0.5 : -0.5;\n            return angle;\n\n\n\n\n        }\n    }\n    update(dt) {\n        this.node.angle = this.checkAngle();\n        this.icon.angle = -this.node.angle;\n\n    }\n}\n"]}