{"version":3,"sources":["assets\\script\\card\\cardRR.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// import { Constant } from \"./Constant\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Card extends cc.Component {\n\n    @property(cc.Sprite)\n    icon: cc.Sprite = null;\n\n    @property(cc.Animation)\n    anim: cc.Animation = null;\n\n    @property(cc.SpriteFrame)\n    card_frame_arr: cc.SpriteFrame[] = [];\n\n    @property(cc.SpriteFrame)\n    card_face_down_frame: cc.SpriteFrame = null;\n\n    card_name = null;\n\n    isRunning = false;\n\n    isOpen = false;\n\n    // onLoad () {}\n\n    start() {\n        this.addListener();\n        // this.appear();\n    }\n\n    appear() {\n        let t = cc.tween;\n        t(this.node).set({ scale: 0 }).to(0.5, { scale: 1.1 }).start();\n    }\n\n    changeIconOpen() {\n        // if (this.card_name) {\n        //     // let Global = cc.Global;\n        this.node.getChildByName(\"block\").active=false\n        //     // this.icon.spriteFrame = Global.getDataByName(this.card_frame_arr, this.card_name);\n        // }\n    }\n\n    changeIconClose() {\n        this.icon.spriteFrame = this.card_face_down_frame;\n    }\n\n    addListener() {\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\n        // cc.Canvas.instance.node.on(Constant.EVENT.CLOSE_CARD, this.onCloseCard, this);\n    }\n\n    onTouchStart(e) {\n        if (this.isRunning || this.isOpen) {\n            return;\n        }\n        // cc.Canvas.instance.node.emit(Constant.EVENT.SOUND.CARD_OPEN);\n        // cc.Canvas.instance.node.emit(Constant.EVENT.OFF_GUIDE);\n        // let Global = cc.Global;\n        // if (!this.card_name) {\n        //     this.card_name = Global.CARD_ARR[Global.COUNT_CARD];\n        //     Global.COUNT_CARD++;\n        // }\n        // this.anim.play(\"open_card\");\n        this.isRunning = true;\n    }\n\n    finishOpen() {\n        this.isOpen = true;\n        this.isRunning = false;\n        // this.checkSameCard();\n    }\n\n    finishClose() {\n        this.isOpen = false;\n        this.isRunning = false;\n    }\n\n    // checkSameCard () {\n    //     let Global = cc.Global;\n    //     let check_card_arr = Global.CHECK_CARD_ARR;\n    //     check_card_arr.push(this);\n    //     if (check_card_arr.length == 2) {\n    //         let card1 = check_card_arr[0];\n    //         let card2 = check_card_arr[1];\n    //         if (card1.card_name !== card2.card_name) {\n    //             cc.Canvas.instance.node.emit(Constant.EVENT.CLOSE_CARD, check_card_arr);\n    //             Global.CHECK_CARD_ARR = [];\n    //         } else {\n    //             // cc.Canvas.instance.node.emit(Constant.EVENT.SHOW_HERO);\n    //             cc.Canvas.instance.node.emit(Constant.EVENT.SHOW_HERO, card1.node, card2.node);\n    //         }\n    //     }\n    // }\n\n    onCloseCard(check_card_arr) {\n        if (check_card_arr.indexOf(this) == -1) {\n            return;\n        }\n        this.isRunning = true;\n        this.anim.play(\"close_card\");\n        // cc.Canvas.instance.node.emit(Constant.EVENT.SOUND.CARD_CLOSE);\n    }\n\n    // update (dt) {}\n}\n"]}