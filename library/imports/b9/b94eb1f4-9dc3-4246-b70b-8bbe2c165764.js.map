{"version":3,"sources":["assets\\script\\Game.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACM,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAsC,4BAAY;IAAlD;QAAA,qEAwIC;QAtIG,gBAAU,GAAc,IAAI,CAAA;QAE5B,UAAI,GAAY,IAAI,CAAA;QAEpB,eAAS,GAAc,IAAI,CAAC;QAE5B,kBAAY,GAAc,IAAI,CAAC;QAE/B,eAAS,GAAY,IAAI,CAAA;QAEzB,aAAO,GAAY,IAAI,CAAA;QAEvB,iBAAW,GAAY,IAAI,CAAC;QAC5B,qBAAqB;QACrB,0BAA0B;QAC1B,iBAAW,GAAG,KAAK,CAAC;QACpB,cAAQ,GAAG,IAAI,CAAC;QAChB,gBAAU,GAAG,CAAC,CAAA;QA6Cd,cAAQ,GAAG,KAAK,CAAA;;IAwEpB,CAAC;IApHa,yBAAM,GAAhB;QACI,EAAE,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;QAC/C,IAAI,OAAO,GAAG,EAAE,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC;QAChD,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;IAC3B,CAAC;IACD,wBAAK,GAAL;QAEI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAEnD,CAAC;IACD,6BAAU,GAAV,UAAW,GAAG;QACV,IAAI,GAAG,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;QAC3C,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAA;IACtB,CAAC;IACD,2BAAQ,GAAR;QAAA,iBA2BC;QA1BG,IAAI,CAAC,UAAU,EAAE,CAAA;QAEjB,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;YACtB,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;SACxD;QACD,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;YACtB,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;SACvD;QACD,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;YACtB,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;SAC1D;QACD,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;YACtB,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;SACxD;QACD,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;YACtB,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;SACvD;QACD,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAA;QAC5B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAA;QAC5D,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;YACtB,IAAI,CAAC,YAAY,CAAC;gBACd,KAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;gBAC3B,KAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAA;YAClC,CAAC,EAAE,CAAC,CAAC,CAAA;SACR;IAEL,CAAC;IAGD,yBAAM,GAAN,UAAO,EAAE;QACL,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;SAC3E;QACD,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAE/C,8CAA8C;QAC9C,8BAA8B;QAC9B,kCAAkC;QAClC,6CAA6C;QAE7C,oCAAoC;QACpC,kCAAkC;QAClC,yBAAyB;QACzB,kCAAkC;QAClC,iDAAiD;QAEjD,eAAe;QACf,oBAAoB;QACpB,+CAA+C;QAE/C,eAAe;QACf,gCAAgC;QAChC,iCAAiC;QACjC,6DAA6D;QAC7D,uCAAuC;QAEvC,YAAY;QAGZ,QAAQ;QACR,IAAI;QACJ,SAAS;QAET,yCAAyC;QACzC,+BAA+B;QAC/B,+BAA+B;QAC/B,+BAA+B;QAC/B,8BAA8B;QAC9B,+BAA+B;QAC/B,sBAAsB;QACtB,IAAI;IACR,CAAC;IACD,+BAAY,GAAZ,UAAa,GAAG;QACZ,IAAI,MAAM,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5C,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAA;QACzB,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC;QACtB,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,CAAA;QACzC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAA;QAChB,8CAA8C;QAC9C,IAAI,WAAW,GAAG,EAAE,GAAG,IAAI,CAAA;QAC3B,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,KAAK,GAAG,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;QAExE,IAAI,WAAW,GAAG,IAAI,EAAE;YACpB,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,KAAK,GAAG,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;SAC3E;QACD,IAAI,WAAW,GAAG,IAAI,EAAE;YACpB,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,KAAK,GAAG,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;SAC3E;QACD,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,GAAG,GAAG,WAAW,CAAC,QAAQ,EAAE,CAAA;QAE3F,gDAAgD;QAChD,8BAA8B;QAC9B,2BAA2B;QAC3B,uBAAuB;QAEvB,8CAA8C;QAG9C,iBAAiB;IACrB,CAAC;IArID;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;gDACQ;IAE5B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;0CACE;IAEpB;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;+CACQ;IAE5B;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;kDACW;IAE/B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;+CACO;IAEzB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;6CACK;IAEvB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;iDACU;IAdX,QAAQ;QAD5B,OAAO;OACa,QAAQ,CAwI5B;IAAD,eAAC;CAxID,AAwIC,CAxIqC,EAAE,CAAC,SAAS,GAwIjD;kBAxIoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n    @property(cc.Camera)\r\n    mainCamera: cc.Camera = null\r\n    @property(cc.Node)\r\n    hero: cc.Node = null\r\n    @property(cc.Prefab)\r\n    preDamage: cc.Prefab = null;\r\n    @property(cc.Prefab)\r\n    preBonusAmmo: cc.Prefab = null;\r\n    @property(cc.Node)\r\n    statusAtk: cc.Node = null\r\n    @property(cc.Node)\r\n    endcard: cc.Node = null\r\n    @property(cc.Node)\r\n    linkToStore: cc.Node = null;\r\n    // @property(cc.Node)\r\n    // miniMap: cc.Node = null\r\n    isPauseGame = false;\r\n    heroComp = null;\r\n    isCountDie = 0\r\n    protected onLoad(): void {\r\n        cc.director.getPhysicsManager().enabled = true;\r\n        let manager = cc.director.getCollisionManager();\r\n        manager.enabled = true;\r\n    }\r\n    start() {\r\n\r\n        this.heroComp = this.hero.getComponent('hero');\r\n\r\n    }\r\n    createAmmo(pos) {\r\n        let box = cc.instantiate(this.preBonusAmmo)\r\n        box.parent = this.node;\r\n        box.position = pos\r\n    }\r\n    countDie() {\r\n        this.isCountDie++\r\n\r\n        if (this.isCountDie == 1) {\r\n            this.statusAtk.getComponent(\"status\").setName(\"FIZZ\")\r\n        }\r\n        if (this.isCountDie == 2) {\r\n            this.statusAtk.getComponent(\"status\").setName(\"ORN\")\r\n        }\r\n        if (this.isCountDie == 3) {\r\n            this.statusAtk.getComponent(\"status\").setName(\"THANOS\")\r\n        }\r\n        if (this.isCountDie == 3) {\r\n            this.statusAtk.getComponent(\"status\").setName(\"JINX\")\r\n        }\r\n        if (this.isCountDie == 3) {\r\n            this.statusAtk.getComponent(\"status\").setName(\"GAM\")\r\n        }\r\n        this.statusAtk.active = true\r\n        this.statusAtk.children[0].getComponent(cc.Animation).play()\r\n        if (this.isCountDie == 5) {\r\n            this.scheduleOnce(() => {\r\n                this.endcard.active = true;\r\n                this.linkToStore.active = true\r\n            }, 1)\r\n        }\r\n\r\n    }\r\n\r\n    isMoving = false\r\n    update(dt) {\r\n        if (!this.isMoving) {\r\n            this.mainCamera.node.setPosition(this.hero.position.add(cc.v3(0, 100)));\r\n        }\r\n        let canvas = this.node.getComponent(cc.Canvas);\r\n\r\n        // if (cc.winSize.width < cc.winSize.height) {\r\n        //     if (!this.isvertical) {\r\n        //         this.isvertical = true;\r\n        //         // this.mainCamera.zoomRatio = 2.2\r\n\r\n        //         canvas.fitHeight = false;\r\n        //         canvas.fitWidth = true;\r\n        //         this.isPus = 0\r\n        //         // if (this.isZoomed) {\r\n        //         //     this.mainCamera.zoomRatio = 1.1\r\n\r\n        //         // }\r\n        //         // else {\r\n        //         //     this.mainCamera.zoomRatio = 1\r\n\r\n        //         // }\r\n        //         this.iconGG.scale = 1\r\n        //         this.coinBar.scale = 1\r\n        //         if (cc.winSize.height / cc.winSize.width < 1.35) {\r\n        //             canvas.fitHeight = true;\r\n\r\n        //         }\r\n\r\n\r\n        //     }\r\n        // }\r\n        // else {\r\n\r\n        //     // this.mainCamera.zoomRatio = 2.2\r\n        //     this.isvertical = false;\r\n        //     canvas.fitHeight = true;\r\n        //     canvas.fitWidth = false;\r\n        //     this.iconGG.scale = 1.3\r\n        //     this.coinBar.scale = 1.3\r\n        //     this.isPus = 80\r\n        // }\r\n    }\r\n    createDamage(pos) {\r\n        let damage = cc.instantiate(this.preDamage);\r\n        damage.parent = this.node\r\n        damage.position = pos;\r\n        let rd = Math.floor(Math.random() * 1000)\r\n        damage.scale = 2\r\n        // let damage = cc.instantiate(this.preDamage)\r\n        let valueDamage = rd + 1000\r\n        damage.getChildByName(\"count\").color = new cc.Color().fromHEX(\"#C236DD\")\r\n\r\n        if (valueDamage > 1200) {\r\n            damage.getChildByName(\"count\").color = new cc.Color().fromHEX(\"#C236DD\")\r\n        }\r\n        if (valueDamage > 1500) {\r\n            damage.getChildByName(\"count\").color = new cc.Color().fromHEX(\"#C53528\")\r\n        }\r\n        damage.getChildByName(\"count\").getComponent(cc.Label).string = \"-\" + valueDamage.toString()\r\n\r\n        // let damagefx = cc.instantiate(this.preFxAtk);\r\n        // damagefx.parent = this.node\r\n        // damagefx.position = pos;\r\n        // damagefx.scale = 1.4\r\n\r\n        // this.boss.getComponent(\"boss\").attacked(90)\r\n\r\n\r\n        // update (dt) {}\r\n    }\r\n}\r\n"]}