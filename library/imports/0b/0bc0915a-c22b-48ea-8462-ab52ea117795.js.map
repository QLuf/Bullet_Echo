{"version":3,"sources":["assets\\script\\rangeHeroListener.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA,oCAA+B;AAE/B,iDAAiC;AAE3B,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAsC,4BAAY;IAAlD;QAAA,qEAsCC;QAnCG,YAAM,GAAY,IAAI,CAAC;QAEvB,eAAS,GAAG,IAAI,CAAC;;QAgCjB,iBAAiB;IACrB,CAAC;IA/BG,wBAAK,GAAL;QACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,CAAA;IAC1C,CAAC;IACD,mCAAgB,GAAhB,UAAiB,KAAK,EAAE,IAAI;QACxB,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,uBAAE,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,uBAAE,CAAC,CAAC,MAAM,EAAE;YACnE,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAI,CAAC,EAAE;gBAChC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,uBAAE,CAAC,CAAC,MAAM,CAAC,CAAC;aAEpF;SACJ;IACL,CAAC;IACD,kCAAe,GAAf,UAAgB,KAAK,EAAE,IAAI;QACvB,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,uBAAE,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,uBAAE,CAAC,CAAC,MAAM,EAAE;YACnE,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAI,CAAC,EAAE;gBAChC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAE9D;SACJ;IACL,CAAC;IACD,kCAAe,GAAf,UAAgB,KAAK,EAAE,IAAI;QACvB,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAI,CAAC,EAAE;YAChC,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,uBAAE,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,uBAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,QAAQ,IAAI,KAAK,EAAE;gBAEvH,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,MAAM,EAAE,CAAC;aAE3C;SACJ;IACL,CAAC;IA/BD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;4CACK;IAHN,QAAQ;QAD5B,OAAO;OACa,QAAQ,CAsC5B;IAAD,eAAC;CAtCD,AAsCC,CAtCqC,EAAE,CAAC,SAAS,GAsCjD;kBAtCoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["\nimport hero from './hero/hero';\nimport enemy from './enemy';\nimport EL from './enemyListener';\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property(cc.Node)\n    target: cc.Node = null;\n\n    className = null;\n\n    start() {\n        this.className = this[\"__classname__\"]\n    }\n    onCollisionEnter(other, self) {\n        if (other.node.getComponent(EL) && other.node.getComponent(EL).target) {\n            if (this.target.getComponent(hero)) {\n                this.target.getComponent(hero).enemyArr.push(other.node.getComponent(EL).target);\n\n            }\n        }\n    }\n    onCollisionExit(other, self) {\n        if (other.node.getComponent(EL) && other.node.getComponent(EL).target) {\n            if (this.target.getComponent(hero)) {\n                this.target.getComponent(hero).removeEnemy(other.node._id);\n\n            }\n        }\n    }\n    onCollisionStay(other, self) {\n        if (this.target.getComponent(hero)) {\n            if (other.node.getComponent(EL) && other.node.getComponent(EL).target && this.target.getComponent(hero).isAttack == false) {\n\n                this.target.getComponent(hero).attack();\n\n            }\n        }\n    }\n\n\n    // update (dt) {}\n}\n"]}